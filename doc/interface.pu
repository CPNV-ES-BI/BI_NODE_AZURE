@startuml BI-Azure-node

note as n1 
  ESBINODE
  09.02.2023
  v1.2
  H.Dubuis, T.Gautier
end note

namespace azure.storageBlob {
  class BlobServiceClient{}
  note left: "Azure sdk class"
}

namespace biNodeAzure {

  class DataObjectImpl{
    STORAGE_CONNECTION_STRING : string
    ACCOUNT_NAME : string
    KEY : string
    blobServiceClient : BlobServiceClient
    - #isContainer(path: string): bool
    - async #getContainer(path: string): ContainerClient
    - async #createContainer(path: string): JSON
    - async #createBlob(path: string, content: string): JSON
    + async doesExist(path: string): boolean
    + async create(path: string, content: string): JSON
    + async delete(path: string): void
    + async download(path: string): string
    + async publish(path: string): string
  }

  abstract Dataobject{
    + async doesExist(path: string)
    + async create(path: string,content: string)
    + async delete(path: string)
    + async download(path: string)
    + async publish(path: string)
  }

  
  class DataObjectAlreadyExistsException
  class DataObjectNotFoundException
  class DataObjectPathNotFoundException

  DataObjectAlreadyExistsException <.. DataObjectImpl :throws
  DataObjectNotFoundException <.. DataObjectImpl :throws
  DataObjectPathNotFoundException <.. DataObjectImpl :throws
  Dataobject <|-- DataObjectImpl
}


namespace api {
  class DataObjectController {

    + async download(req, res)
    + async create(req, res) 
    + async delete(req, res)
    + async publish(req, res)

  }
}

azure.storageBlob.BlobServiceClient <.. biNodeAzure.DataObjectImpl
biNodeAzure.DataObjectImpl <.. api.DataObjectController





@enduml